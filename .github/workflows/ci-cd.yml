name: CI/CD for Voting App

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:

  build-vote:
    name: Build & Push Vote
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push vote image
        run: |
          TAG=${GITHUB_SHA::7}
          docker build -t $REGISTRY/$IMAGE_PREFIX/vote:$TAG ./app/vote
          docker push $REGISTRY/$IMAGE_PREFIX/vote:$TAG

  build-result:
    name: Build & Push Result
    runs-on: ubuntu-latest
    needs: build-vote
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push result image
        run: |
          TAG=${GITHUB_SHA::7}
          docker build -t $REGISTRY/$IMAGE_PREFIX/result:$TAG ./app/result
          docker push $REGISTRY/$IMAGE_PREFIX/result:$TAG

  build-worker:
    name: Build & Push Worker
    runs-on: ubuntu-latest
    needs: build-result
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push worker image
        run: |
          TAG=${GITHUB_SHA::7}
          docker build -t $REGISTRY/$IMAGE_PREFIX/worker:$TAG ./app/worker
          docker push $REGISTRY/$IMAGE_PREFIX/worker:$TAG

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-worker
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
          
      - name: View Kubeconfig and Verify Kubectl Access
        run: |
          kubectl get nodes
          kubectl config view
          kubectl get svc # This is the command that fails

      - name: Patch image tags in manifests
        run: |
          TAG=${GITHUB_SHA::7}
          sed -i "s|<VOTE_IMAGE>|docker.io/${{ secrets.DOCKERHUB_USERNAME }}/vote:$TAG|g" k8s-manifests/*.yaml
          sed -i "s|<RESULT_IMAGE>|docker.io/${{ secrets.DOCKERHUB_USERNAME }}/result:$TAG|g" k8s-manifests/*.yaml
          sed -i "s|<WORKER_IMAGE>|docker.io/${{ secrets.DOCKERHUB_USERNAME }}/worker:$TAG|g" k8s-manifests/*.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s-manifests/
